
.border-color (@primary-background) when (lightness(@primary-background) <= 70%) and (lightness(@primary-background) >= 30%) {
	border-color: darken(@primary-background, 5%);
}
.border-color (@primary-background) when (lightness(@primary-background) > 70%), (lightness(@primary-background) < 30%) {
 	border-color: darken(@primary-background, 6%);
}
.border-color (@primary-background) when (lightness(@primary-background) > 70%), (lightness(@primary-background) < 30%){
 	border-color: darken(@primary-background, 5%);
}

.border-color-woo (@primary-background) when (lightness(@primary-background) <= 70%) and (lightness(@primary-background) >= 30%) {
	border-color: darken(@primary-background, 6%) !important;
}
.border-color-woo (@primary-background) when (lightness(@primary-background) > 70%) , (lightness(@primary-background) < 30%) {
 	border-color: darken(@primary-background, 10%) !important;
}

.text-color (@primary-background, @color) when not (@color = '') {
	color: @color;
}
.text-color (@primary-background, @color) when (lightness(@primary-background) >= 70%) and (@color='') {
	color: @text-color;
}
.text-color (@primary-background, @color) when (lightness(@primary-background) < 70%) and (@color='') {
	color: lighten(@text-color, 90%);
}


.dark-light (@primary-background) when (lightness(@primary-background) >= 70%) {
	color: @text-color;
}
.dark-light (@primary-background) when (lightness(@primary-background) < 70%) {
	color: lighten(@text-color, 90%);
}


.background-color (@primary-background) when (lightness(@primary-background) >= 70%) {
	background-color: darken(@primary-background, 10%);
}
.background-color (@primary-background) when (lightness(@primary-background) < 70%) {
	background-color: lighten(@primary-background, 10%);
}
.heading-color (@primary-background, @color) when not (@color = '') {
	color: @color;
}
.heading-color (@primary-background, @color) when (lightness(@primary-background) >= 70%) and (@color='') {
	color: @headings-color;
}
.heading-color (@primary-background, @color) when (lightness(@primary-background) < 70%) and (@color='') {
	color: lighten(@headings-color, 90%);
}

// for menu item background

.header-bg (@bg-color) when not (@bg-color = '') {
	background-color: @bg-color;
}
.header-bg (@bg-color) when (@bg-color='') {
	background-color: @header-background;
}


// Sizing shortcuts
.size(@width; @height) {
  width: @width;
  height: @height;
}
.square(@size) {
  .size(@size; @size);
}

// Placeholder text
.placeholder(@color: @input-color-placeholder) {
  &::-moz-placeholder           { color: @color;   // Firefox
                                  opacity: 1; } // See https://github.com/twbs/bootstrap/pull/11526
  &:-ms-input-placeholder       { color: @color; } // Internet Explorer 10+
  &::-webkit-input-placeholder  { color: @color; } // Safari and Chrome
}

// CSS3
// -------------------------


.border-radius(@radius) {
	border-radius: @radius;
	-moz-border-radius: @radius;
	-webkit-border-radius: @radius;
}

// Single side border-radius
.border-top-radius(@radius) {
  border-top-right-radius: @radius;
   border-top-left-radius: @radius;
}
.border-right-radius(@radius) {
  border-bottom-right-radius: @radius;
     border-top-right-radius: @radius;
}
.border-bottom-radius(@radius) {
  border-bottom-right-radius: @radius;
   border-bottom-left-radius: @radius;
}
.border-left-radius(@radius) {
  border-bottom-left-radius: @radius;
     border-top-left-radius: @radius;
}

// Drop shadows
//
// Note: Deprecated `.box-shadow()` as of v3.1.0 since all of Bootstrap's
//   supported browsers that have box shadow capabilities now support the
//   standard `box-shadow` property.
.box-shadow(@shadow) {
	box-shadow: @shadow;
	-moz-box-shadow: @shadow;
	-webkit-box-shadow: @shadow;
}

// Transitions
.transition(@transition) {
  -webkit-transition: @transition;
          transition: @transition;
}
.transition-property(@transition-property) {
  -webkit-transition-property: @transition-property;
          transition-property: @transition-property;
}
.transition-delay(@transition-delay) {
  -webkit-transition-delay: @transition-delay;
          transition-delay: @transition-delay;
}
.transition-duration(@transition-duration) {
  -webkit-transition-duration: @transition-duration;
          transition-duration: @transition-duration;
}
.transition-transform(@transition) {
  -webkit-transition: -webkit-transform @transition;
     -moz-transition: -moz-transform @transition;
       -o-transition: -o-transform @transition;
          transition: transform @transition;
}

// Transformations
.rotate(@degrees) {
  -webkit-transform: rotate(@degrees);
      -ms-transform: rotate(@degrees); // IE9 only
          transform: rotate(@degrees);
}
.scale(@ratio; @ratio-y...) {
  -webkit-transform: scale(@ratio, @ratio-y);
      -ms-transform: scale(@ratio, @ratio-y); // IE9 only
          transform: scale(@ratio, @ratio-y);
}
.translate(@x; @y) {
  -webkit-transform: translate(@x, @y);
      -ms-transform: translate(@x, @y); // IE9 only
          transform: translate(@x, @y);
}
.skew(@x; @y) {
  -webkit-transform: skew(@x, @y);
      -ms-transform: skewX(@x) skewY(@y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+
          transform: skew(@x, @y);
}
.translate3d(@x; @y; @z) {
  -webkit-transform: translate3d(@x, @y, @z);
          transform: translate3d(@x, @y, @z);
}

.rotateX(@degrees) {
  -webkit-transform: rotateX(@degrees);
      -ms-transform: rotateX(@degrees); // IE9 only
          transform: rotateX(@degrees);
}
.rotateY(@degrees) {
  -webkit-transform: rotateY(@degrees);
      -ms-transform: rotateY(@degrees); // IE9 only
          transform: rotateY(@degrees);
}
.perspective(@perspective) {
  -webkit-perspective: @perspective;
     -moz-perspective: @perspective;
          perspective: @perspective;
}
.perspective-origin(@perspective) {
  -webkit-perspective-origin: @perspective;
     -moz-perspective-origin: @perspective;
          perspective-origin: @perspective;
}
.transform-origin(@origin) {
  -webkit-transform-origin: @origin;
     -moz-transform-origin: @origin;
      -ms-transform-origin: @origin; // IE9 only
          transform-origin: @origin;
}

// Animations
.animation(@animation) {
  -webkit-animation: @animation;
          animation: @animation;
}
.animation-name(@name) {
  -webkit-animation-name: @name;
          animation-name: @name;
}
.animation-duration(@duration) {
  -webkit-animation-duration: @duration;
          animation-duration: @duration;
}
.animation-timing-function(@timing-function) {
  -webkit-animation-timing-function: @timing-function;
          animation-timing-function: @timing-function;
}
.animation-delay(@delay) {
  -webkit-animation-delay: @delay;
          animation-delay: @delay;
}
.animation-iteration-count(@iteration-count) {
  -webkit-animation-iteration-count: @iteration-count;
          animation-iteration-count: @iteration-count;
}
.animation-direction(@direction) {
  -webkit-animation-direction: @direction;
          animation-direction: @direction;
}

// Box sizing
.box-sizing(@boxmodel) {
  -webkit-box-sizing: @boxmodel;
     -moz-box-sizing: @boxmodel;
          box-sizing: @boxmodel;
}

// Opacity
.opacity(@opacity) {
  opacity: @opacity;
  // IE8 filter
  @opacity-ie: (@opacity * 100);
  filter: ~"alpha(opacity=@{opacity-ie})";
}
